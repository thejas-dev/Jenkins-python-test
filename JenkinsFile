pipeline{
    agent { docker { image 'python:3.13.0-alpine3.20' } }
    triggers {
        pollSCM '* * * * *'
    }
    environment{
        TOUSERNAME = 'thejaskala308@gmail.com'
        MIMETYPE = 'text/html'
    }
    stages{
        stage('Build'){
            steps{
                echo 'From Build'
                sh '''
                    echo Multiline Text from build text
                ''' 
                sh 'python3 test.py'   
            }
        }
        stage('Test'){
            steps{
                echo 'From Test'
                sh '''
                    echo Multiline Text from test text
                ''' 
                sh '''
                    python3 - << EOF
print("Hello from Python Script!")

# Example logic in Python
def greet(name):
    return f"Hello, {name}!"

print(greet("Thejas"))
EOF
                '''
            }
        }
        stage('deploy'){
            steps{
                echo 'From Deploy'
                sh '''
                    echo Multiline Text from deploy text
                ''' 
                script{
                    def jsonString = '{"name":"Hari","age":5}'
                    def jsonObj = readJSON text: jsonString

                    echo "${jsonObj.name}"
                    echo "${jsonObj.age}"

                    def jsonUser = readFile('test.json')
                    echo "${jsonUser.name}"
                    echo "${jsonUser.age}"
                }
            }
        }
    }
    post{
        success{
            script{
                def emailBody = readFile('success-template.html')
                emailBody = replaceVariables(emailBody)
                sendEmail(emailBody)
            }   
        }
        failure{
            script{
                def emailBody = readFile('failure-template.html')
                emailBody = replaceVariables(emailBody)
                sendEmail(emailBody)
            }
        }
    }
}

def sendEmail(body){
    mail(
        from: "thejaskala308@gmail.com",
        to: "${TOUSERNAME}",
        subject: 'Email From Jenkins Pipeline', 
        mimeType: "${MIMETYPE}",
        body: body
    )
}

def replaceVariables(template){
    return template
    .replaceAll('\\$BUILD_NUMBER',env.BUILD_NUMBER)
    .replaceAll('\\$env.JOB_NAME',env.JOB_NAME)
    .replaceAll('\\$currentBuild.currentResult',currentBuild.currentResult)
}